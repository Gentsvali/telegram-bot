import asyncio
from solana.rpc.async_api import AsyncClient
from telegram import Bot
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
HELIUS_API_KEY = os.getenv("HELIUS_API_KEY")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

async def monitor_pools():
    bot = Bot(token=TELEGRAM_TOKEN)
    client = AsyncClient(f"https://mainnet.helius-rpc.com/?api-key={HELIUS_API_KEY}")
    
    last_count = 0
    
    while True:
        try:
            # 1. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—É–ª—ã DLMM
            response = await client.get_program_accounts(
                "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo",
                encoding="jsonParsed"
            )
            
            if not response or not hasattr(response, 'value'):
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç RPC")

            current_count = len(response.value)
            
            # 2. –ï—Å–ª–∏ –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –ø—É–ª—ã
            if current_count > last_count:
                message = f"üîç –ù–æ–≤—ã—Ö –ø—É–ª–æ–≤: {current_count - last_count}\n–í—Å–µ–≥–æ: {current_count}"
                await bot.send_message(CHAT_ID, message)
                last_count = current_count
                
        except Exception as e:
            print(f"üö® –û—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(10)  # –ü–∞—É–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        
        await asyncio.sleep(60)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥

if __name__ == "__main__":
    asyncio.run(monitor_pools())